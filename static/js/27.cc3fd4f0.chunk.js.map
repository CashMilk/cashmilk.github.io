{"version":3,"sources":["config/constants/nfts.ts","config/constants/breed.ts","views/Blindbox/components/BoxContainerComponent.tsx","views/Blindbox/components/BoxBuyDetailComponent.tsx","views/Blindbox/components/BlindBoxDetailInfo.tsx","views/Blindbox/BlindboxDetail.tsx"],"names":["RABBIT_MINTING_FARM_ADDRESS","PANCAKE_RABBITS_ADDRESS","PINATA_BASE_URI","PINATA_METADATA_CID","Nfts","name","description","originalImage","previewImage","blurImage","sortOrder","bunnyId","breeds","BoxContainer","styled","div","BoxImageFlur","BoxImageContainer","BoxImage","BoxTitle","BoxContainerComponent","boxTitle","boxImage","style","backgroundImage","RemainingAmount","BoxPrice","BoxPriceContainer","PriceDetailContainer","BuyNowBtnContainer","BoxBuyDetailComponent","setLoading","useContext","LoadingContext","isDark","useTheme","useWallet","account","connect","useState","mintingState","setMintingState","mintedAmount","setMintedAmount","price","setPrice","milkPrice","setMilkPrice","cakePriceUsd","usePriceCakeBusd","useEffect","window","localStorage","getItem","getTotalSupply","a","web3","Web3","givenProvider","happyCowsContract","eth","Contract","HappyCows","abi","getHappyCowAddress","methods","totalSupply","call","amount","tmpPrice","parseInt","getBlockNumber","blockNumber","toNumber","buyButtonHandler","priceWei","toWei","toBN","milkTokenContract","MilkToken","getMilkAddress","allowance","toString","approve","send","from","buyBlindBox","on","toast","success","receipt","console","log","prev","message","error","color","fontSize","fontWeight","background","boxShadow","src","alt","width","height","marginRight","marginLeft","Math","round","onClick","disabled","BoxInfo","BoxInfoContainer","BoxInfoRulesContainer","BoxInfoMainContainer","BlindBoxDetailInfo","lineHeight","margin","BlindboxDetail","useParams","index","breedsList","setBreedsList","fetchBreeds","useCallback","promises","map","item","fetch","res","json","image","slice","breed","attributes","value","Promise","all","StyledHero","StyledWrapper","Page","BoxDetailContainer","BoxContainerLeft","BoxContainerRight","ItemContainer","GradientBack","ItemEachContainer","as","size","mb","textAlign","mt"],"mappings":"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","file":"static/js/27.cc3fd4f0.chunk.js","sourcesContent":["import { Nft } from './types'\n\nexport const RABBIT_MINTING_FARM_ADDRESS = '0x7c8b60d2b859a38c8B9b5B6CB4565485cb637c7a'\nexport const PANCAKE_RABBITS_ADDRESS = '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07'\nexport const PINATA_BASE_URI = 'https://nftstorage.link/ipfs/'     // 'https://cashcowprotocol.mypinata.cloud/ipfs/'\nexport const PINATA_METADATA_CID = 'bafybeiatsdvidxz6sltqxpf77r5le7s72crclcukljioikieo2s4v7swd4'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Genesis Land',\n    description: 'This genesis land especially in Cash Milk Finance',\n    originalImage: `${PINATA_BASE_URI}QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png`,\n    previewImage: '200.gif',\n    blurImage: 'swapsies-blur.png',\n    sortOrder: 999,\n    bunnyId: 0,\n  },\n  {\n    name: 'Genesis Land',\n    description: \"This genesis land especially in Cash Milk Finance\",\n    originalImage: `${PINATA_BASE_URI}QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png`,\n    previewImage: '201.gif',\n    blurImage: 'drizzle-blur.png',\n    sortOrder: 999,\n    bunnyId: 1,\n  },\n  {\n    name: 'Genesis Land',\n    description: \"This genesis land especially in Cash Milk Finance\",\n    originalImage: `${PINATA_BASE_URI}QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png`,\n    previewImage: '202.gif',\n    blurImage: 'blueberries-blur.png',\n    sortOrder: 999,\n    bunnyId: 2,\n  },\n  {\n    name: 'Genesis Land',\n    description: \"This genesis land especially in Cash Milk Finance\",\n    originalImage: `${PINATA_BASE_URI}QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png`,\n    previewImage: '203.gif',\n    blurImage: 'circular-blur.png',\n    sortOrder: 999,\n    bunnyId: 3,\n  },\n  {\n    name: 'Genesis Land',\n    description: 'This genesis land especially in Cash Milk Finance',\n    originalImage: `${PINATA_BASE_URI}QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\n    previewImage: '204.gif',\n    blurImage: 'sparkle-blur.png',\n    sortOrder: 999,\n    bunnyId: 4,\n  },\n  {\n    name: 'Genesis Land',\n    description: 'This genesis land especially in Cash Milk Finance',\n    originalImage: `${PINATA_BASE_URI}QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\n    previewImage: '205.gif',\n    blurImage: 'sparkle-blur.png',\n    sortOrder: 999,\n    bunnyId: 5,\n  },\n   {\n    name: 'Genesis Land',\n    description: 'This genesis land especially in Cash Milk Finance',\n    originalImage: `${PINATA_BASE_URI}QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\n    previewImage: '206.gif',\n    blurImage: 'sparkle-blur.png',\n    sortOrder: 999,\n    bunnyId: 6,\n  },\n   {\n    name: 'Genesis Land',\n    description: 'This genesis land especially in Cash Milk Finance',\n    originalImage: `${PINATA_BASE_URI}QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\n    previewImage: '207.gif',\n    blurImage: 'sparkle-blur.png',\n    sortOrder: 999,\n    bunnyId: 7,\n  },\n   {\n    name: 'Genesis Land',\n    description: 'This genesis land especially in Cash Milk Finance',\n    originalImage: `${PINATA_BASE_URI}QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\n    previewImage: '208.gif',\n    blurImage: 'sparkle-blur.png',\n    sortOrder: 999,\n    bunnyId: 8,\n  },\n  \n]\n\nexport default Nfts\n","import { PINATA_BASE_URI, PINATA_METADATA_CID } from \"./nfts\";\n\n\nconst breeds = [\n  `${PINATA_BASE_URI}${PINATA_METADATA_CID}/2.json`, // Angus  -->Balloon\n  // https://bafybeiatsdvidxz6sltqxpf77r5le7s72crclcukljioikieo2s4v7swd4.ipfs.nftstorage.link/2.json\n  `${PINATA_BASE_URI}${PINATA_METADATA_CID}/25.json`, // Braham  -->Diamond\n  `${PINATA_BASE_URI}${PINATA_METADATA_CID}/24.json`, // Hereford -->Light\n  `${PINATA_BASE_URI}${PINATA_METADATA_CID}/37.json`, // Highland   -->Necklace\n  `${PINATA_BASE_URI}${PINATA_METADATA_CID}/9.json`, // Holstein  -->Superman\n];\n\nexport default breeds;","import React from 'react'\nimport styled from 'styled-components'\n\nconst BoxContainer = styled.div`\n  width: calc(100% - 24px);\n  display: flex;\n  margin: 12px;\n  cursor: pointer;\n`\n\nconst BoxImageFlur = styled.div`\n  background-size: 600%;\n  filter: blur(30px);\n  background-position: 70% 50%;\n  top:0;\n  left: 0;\n  width: 100%; \n  height: 100%;\n  position: absolute;\n`\n\nconst BoxImageContainer = styled.div`\n  border-radius: 16px;\n  position: relative;\n  overflow: hidden;\n  padding-bottom: 100%;\n  width: 100%;\n  height: 100%;\n`\n\nconst BoxImage = styled.div`\n  background-size : cover;\n  position: absolute;\n  top:0;\n  left: 0;\n  width: 100%; \n  height: 100%;\n  background-repeat: no-repeat;\n  background-position: 50%;\n  transition: transform .3s ease,-webkit-transform .3s ease;\n  &:hover{\n    transform: scale(1.02);\n  }\n`\nconst BoxTitle = styled.div`\n  position: absolute;\n  bottom: 12px;\n  background: rgba(0,0,0,.16);\n  border-radius: 6px;\n  left: 50%;\n  transform: translateX(-50%);\n  white-space: nowrap;\n  font-size: 14px;\n  font-weight: 700;\n  color: white;\n  padding: 3px 6px;\n`\n\nexport interface BoxContainerComponentInterface {\n  boxTitle?: string;\n  boxImage?: string;\n}\n\nconst BoxContainerComponent = ({boxTitle, boxImage}:BoxContainerComponentInterface) => {\n    return (\n        <BoxContainer>\n            <BoxImageContainer>\n                <BoxImageFlur style={{backgroundImage: `url(../images/${boxImage})`}}/>\n                <BoxImage style={{backgroundImage: `url(../images/${boxImage})`}}/>\n                <BoxTitle>{boxTitle}</BoxTitle>\n            </BoxImageContainer>\n        </BoxContainer>\n    )\n}\n\nexport default BoxContainerComponent\n","import React, {useEffect, useState, useContext} from 'react'\nimport styled from 'styled-components'\nimport toast from 'react-hot-toast'\nimport { Button } from 'cashcow-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport MilkToken from 'config/abi/MilkToken.json'\nimport HappyCows from 'config/abi/HappyCows.json'\nimport { toWei, AbiItem, toBN } from \"web3-utils\";\nimport { LoadingContext } from 'contexts/LoadingContext'\nimport { getHappyCowAddress, getMilkAddress } from 'utils/addressHelpers'\nimport Web3 from \"web3\";\nimport { usePriceCakeBusd } from 'state/hooks'\nimport useTheme from 'hooks/useTheme'\n\nconst BoxTitle = styled.div`\n    font-size: 28px;\n    font-weight: 600;\n    color: #431216;\n    word-break: break-word;\n`\nconst RemainingAmount = styled.div`\n    font-size: 16px;\n    color: #694f4e;\n    margin-top: 24px;\n    word-break: break-word;\n`\n\nconst BoxPrice = styled.div`\n    margin-top: 32px;\n    border-radius: 16px;\n    box-shadow: 0 6px 12px 0 rgb(0 0 0 / 6%), 0 -1px 2px 0 rgb(0 0 0 / 2%);\n    display: flex;\n`\n\nconst BoxPriceContainer = styled.div`\n    padding: 16px;\n    flex: 1;\n`\n\nconst PriceDetailContainer = styled.div`\n    font-size: 28px;\n    color: #431216;\n    font-weight: 700;\n    margin-top: 6px;\n    display: flex;\n    align-items: center;\n`\n\nconst BuyNowBtnContainer = styled.div`\n    margin-top: 40px;\n`\n\nconst BoxBuyDetailComponent = () => {\n\n    const { setLoading } = useContext(LoadingContext);\n    const { isDark } = useTheme()\n    const { account, connect } = useWallet()\n    const [mintingState, setMintingState] = useState(true);\n    const [mintedAmount, setMintedAmount] = useState(0)\n    const [price, setPrice] = useState(\"0\");\n    const [milkPrice, setMilkPrice] = useState(0);\n\n    /** Styles Div */\n\n    /** Calling Smart Contract Function */\n    const cakePriceUsd = usePriceCakeBusd()\n\n    useEffect( () => {\n        if (!account && window.localStorage.getItem('accountStatus')) {\n            connect('injected')\n        }\n        \n        const getTotalSupply = async () => {\n            const web3 = new Web3(Web3.givenProvider);\n            const happyCowsContract = new web3.eth.Contract(HappyCows.abi as AbiItem[], getHappyCowAddress());\n            const amount = await happyCowsContract.methods.totalSupply().call();\n            const tmpPrice = await happyCowsContract.methods.price().call();\n            setPrice(tmpPrice);\n            setMintedAmount(parseInt(amount));\n\n            if (amount === 0) {\n                setMintingState(false);\n            }\n\n            const currentBlockNumber = await web3.eth.getBlockNumber();\n            const blockNumber = await happyCowsContract.methods.blockNumber().call();\n\n            // if (currentBlockNumber < blockNumber) {\n            //     setMintingState(false);\n            // }\n        }\n        setMilkPrice(cakePriceUsd.toNumber());\n        getTotalSupply()\n    }, [account, connect, cakePriceUsd])\n\n    // const getJSONFile = () => {\n\n    //     const imageNames = [\n    //         'QmP65x6iWEe1j1uuwDu1zz9ATbeZsL1XhXUKAFHDhQP4GE/batman-superheroe.png',\n    //         'QmP65x6iWEe1j1uuwDu1zz9ATbeZsL1XhXUKAFHDhQP4GE/capitanamerica-superheroes.png',\n    //         'QmP65x6iWEe1j1uuwDu1zz9ATbeZsL1XhXUKAFHDhQP4GE/flash-superheroes.png',\n    //         'QmP65x6iWEe1j1uuwDu1zz9ATbeZsL1XhXUKAFHDhQP4GE/linternaverde-superheroes.png',\n    //     ]\n\n    //     const phaseNames = [\n    //         'Hereford', 'Angus', 'Holstein', 'Brahaman', 'Highland'\n    //     ]\n        \n    //     const randomNum = Math.floor(Math.random() * 10)\n    //     return {\n    //         pinataMetadata: {\n    //             name: 'Happy Cashcow',\n    //             keyvalues: {\n    //             }\n    //         },\n    //         pinataContent: {\n    //             image: imageNames[randomNum % 4],\n    //             phase: phaseNames[randomNum % 5],\n    //         }\n    //     }\n    // }\n\n    \n    const buyButtonHandler = async () => {\n        setMintingState(false);\n        setLoading(true);\n        const priceWei = toWei(toBN(\"10000000000000000000000000000000000000000\"), 'ether');\n        const web3 = new Web3(Web3.givenProvider);\n        const happyCowsContract = new web3.eth.Contract(HappyCows.abi as AbiItem[], getHappyCowAddress());\n        const milkTokenContract = new web3.eth.Contract(MilkToken.abi as AbiItem[], getMilkAddress());\n        const allowance = await milkTokenContract.methods.allowance(account, getHappyCowAddress()).call();\n        if(parseInt(allowance.toString()) < parseInt(price))\n            await milkTokenContract.methods.approve(getHappyCowAddress(), priceWei).send({ from: account });\n\n        try {\n            await happyCowsContract.methods\n                .buyBlindBox()\n                .send({from: account})\n                .on('transactionHash', function() {\n                    toast.success('Transaction submitted');\n                })\n                .on('receipt', function(receipt) {\n                    console.log(receipt);\n                    setMintedAmount(prev => prev + 1); \n                    setMintingState(true);\n                    setLoading(false);\n                    toast.success('Mint succeed');\n                })\n        } catch (err: unknown) {\n            console.log(\"ERROR: \", err);\n            setMintingState(true);\n            setLoading(false);\n\n            const { message } = err as Error\n            toast.error(message);\n        }\n        // setMintingState(true);\n    }\n\n    return (\n        <div>\n            <BoxTitle style={{color: isDark ? \"white\" : \"\"}}>\n                HappyCows NFT\n            </BoxTitle>\n            <RemainingAmount style={{color: isDark ? \"white\" : \"\"}}>\n                Remaining: <span style={{fontSize: '18px', color: isDark ? \"white\" : '#431216', fontWeight: 700}}>{1000 - mintedAmount} / 1000</span>\n            </RemainingAmount>\n            <BoxPrice style={{background: isDark ? '#16151a' : '', boxShadow: isDark ? \"0 6px 12px 0 rgb(255 255 255 / 6%), 0 -1px 2px 0 rgb(255 255 255 / 2%)\" : ''}}>\n                <BoxPriceContainer style={{color: isDark ? \"white\" : \"\"}}>\n                    Price\n                    <PriceDetailContainer style={{color: isDark ? \"white\" : \"\"}}>\n                        <img src=\"/images/farms/milk.png\" alt=\"\" style={{width: \"24px\",  height: \"24px\", marginRight: '8px'}}/>\n                        {price}\n                        <span style={{fontSize: \"14px\", color: isDark ? 'white' : '#694f4e', fontWeight:400, marginLeft: \"4px\"}}>{` ≈ $${Math.round(milkPrice * parseInt(price) * 100) / 100}`}</span>\n                    </PriceDetailContainer>\n                </BoxPriceContainer>\n            </BoxPrice>\n            <BuyNowBtnContainer>\n                {\n                    account && mintingState === true ? \n                    <div>\n                        <Button \n\t\t\t\t\t\t\n\t\t\t\t\t\tonClick={buyButtonHandler} style={{width:\"calc(100% - 10px)\" , marginRight: \"10px\"}}>\n                            Mint\n                        </Button>\n                    </div>\n                    : \n\t\t\t\t\t\n                    <Button style={{width: \"100%\"}} disabled>\n\t\t\t\t\t\n                        Mint\n                    </Button>\n                }\n            </BuyNowBtnContainer>\n        </div>\n\n    )\n}\n\nexport default BoxBuyDetailComponent\n","import React from 'react'\nimport styled from 'styled-components'\nimport useTheme from 'hooks/useTheme'\n\nconst BoxInfo = styled.div`\n    border-radius: 16px;\n    box-shadow: 0 6px 12px 0 rgb(0 0 0 / 6%), 0 -1px 2px 0 rgb(0 0 0 / 2%);\n    padding: 16px;\n    margin-top: 50px;\n`\nconst BoxInfoContainer = styled.div`\n    overflow: auto;\n`\nconst BoxInfoRulesContainer = styled.div`\n    font-size: 14px;\n    font-weight: 700;\n    color: #431216;\n    display: flex;\n    justify-content: space-between;\n`\nconst BoxInfoMainContainer = styled.div`\n    font-size: 13px;\n    color: #694f4e;\n    margin-top: 20px;\n`\n\nconst BlindBoxDetailInfo = () => {\n    const { isDark } = useTheme()\n\n    return (\n        <BoxInfo style={{background: isDark ? '#16151a' : '', boxShadow: isDark ? \"0 6px 12px 0 rgb(255 255 255 / 6%), 0 -1px 2px 0 rgb(255 255 255 / 2%)\" : ''}}>\n            <BoxInfoContainer>\n                <BoxInfoRulesContainer style={{color: isDark ? 'white' : ''}}>\n                    Blind Box Rules\n                </BoxInfoRulesContainer>\n                <BoxInfoMainContainer style={{color: isDark ? 'white' : ''}}>\n                    <p style={{lineHeight: 1.2, margin: \"7px 0\"}}>\n                        1. You can mint NFTs only with $MILK, and get a randomly generated NFT after purchase.\n                    </p>\n                    <p style={{lineHeight: 1.2, margin: \"7px 0\"}}>\n                        2. HappyCows Collectibles NFT will make the owner a Milk Finance Community Rare Member, and be traded freely on the NFT Market.\n                    </p>\n                </BoxInfoMainContainer>\n            </BoxInfoContainer>\n        </BoxInfo>\n    )\n}\n\nexport default BlindBoxDetailInfo\n","import React, { useState, useEffect, useCallback } from 'react'\nimport styled from 'styled-components'\nimport {useParams} from 'react-router-dom'\nimport Page from 'components/layout/Page'\nimport { Heading } from 'cashcow-uikit'\nimport useTheme from 'hooks/useTheme'\nimport breeds from 'config/constants/breed'\nimport { PINATA_BASE_URI } from 'config/constants/nfts'\nimport BoxContainerComponent from './components/BoxContainerComponent'\nimport BoxBuyDetailComponent from './components/BoxBuyDetailComponent'\nimport BlindBoxDetailInfo from './components/BlindBoxDetailInfo'\n\ntype boxParam = {\n  index: string;\n};\n\nconst BlindboxDetail = () => {\n  const { index } = useParams<boxParam>();\n  const { isDark } = useTheme();\n  const [ breedsList, setBreedsList ] = useState<Array<any>>([]);\n\n  const fetchBreeds = useCallback(async () => {\n    const promises = breeds.map(async (item) => {\n      try {\n        const res = await fetch(item);\n        const json = await res.json();\n\n        return {\n          image: `${PINATA_BASE_URI}${json.image.slice(7)}`,\n          breed: json.attributes[2].value\n        };\n      } catch (e) {\n        console.log(e);\n      }\n\n      return {};\n    });\n\n    setBreedsList(await Promise.all(promises));\n  }, [setBreedsList]);\n\n\n  useEffect(() => {\n    fetchBreeds();\n  }, [fetchBreeds]);\n\n  const StyledHero = styled.div`\n    border-bottom: 1px solid #e8e8e8;\n    margin-bottom: 20px;\n  `\n\n  const StyledWrapper = styled(Page)`\n    position: relative;\n  `\n\n  const BoxDetailContainer = styled.div`\n    background: ${isDark ? '#27262c' : 'white'};\n    ${isDark ? \n      \"box-shadow: 0px 2px 12px -8px rgb(25 19 38 / 10%), 0px 1px 1px rgb(25 19 38 / 5%)\"\n      : \"\"\n    };\n    position: relative;\n    border-radius: 32px;\n    padding-bottom: 20px;\n    display: flex;\n\n    @media (max-width: 768px) {\n      flex-wrap: wrap;\n      justify-content: center;\n    }\n  `\n\n  const BoxContainerLeft = styled.div`\n    width: calc(50% - 12px);\n    display: flex;\n    flex-wrap: wrap;\n    margin: 12px;\n\n    @media (max-width: 768px) {\n      width: 100%;\n    }\n  `\n  const BoxContainerRight = styled.div`\n    width: 50%;\n    height: 100%;\n    margin: 24px;\n\n    @media (max-width: 768px) {\n      width: 100%;\n    }\n  `\n  const ItemContainer = styled.div`\n    display: flex;\n    width: 100%;\n\n    @media (max-width: 768px) {\n      flex-wrap: wrap;\n    }\n  `\n  const GradientBack = styled.div`\n    background: linear-gradient( 45deg, rgba(255,0,0,1) 0%, rgba(255,154,0,1) 10%, rgba(208,222,33,1) 20%, rgba(79,220,74,1) 30%, rgba(63,218,216,1) 40%, rgba(47,201,226,1) 50%, rgba(28,127,238,1) 60%, rgba(95,21,242,1) 70%, rgba(186,12,248,1) 80%, rgba(251,7,217,1) 90%, rgba(255,0,0,1) 100% );\n    background-size: 300% 300%;\n    animation: ilqnTz 2s linear infinite;\n    filter: blur(10px);\n    position: absolute;\n    top:-2px;\n    right:-2px;\n    bottom:-2px;\n    left:-2px;\n    z-index: -1;\n  `\n\n  const ItemEachContainer = styled.div`\n    margin: 10px;\n    background: #fff;\n    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 3%), 0 4px 6px -2px rgb(0 0 0 / 1%);\n    border-radius: 24px;\n    padding: 16px;\n    width: calc(20% - 20px);\n    box-sizing: border-box;\n    display: flex;\n    transition: transform .3s ease,-webkit-transform .3s ease;\n    padding-top: calc(20% - 50px);\n    position: relative;\n    background-size: cover;\n    color: white;\n\n    @media (max-width: 768px) {\n      width: calc(50% - 20px);\n      padding-top: calc(50% - 50px);\n    }\n\n    &:before {\n      position: absolute;\n      z-index: 0;\n      content: '';\n      width: 100%;\n      height: 40px;\n      bottom: 0;\n      left: 0;\n      backdrop-filter: blur(5px);\n      border-radius: 0 0 24px 24px;\n    }\n\n    span {\n      z-index: 10;\n      text-shadow: 2px 2px 2px black;\n      text-transform: uppercase;\n    }\n  `\n    return (\n      <StyledWrapper>\n        <Page>\n          <StyledHero>\n            <Heading as=\"h1\" size=\"lg\" color=\"text\" mb=\"20px\" style={{textAlign: \"center\", color: isDark ? \"white\" : ''}} >\n            Blind Box\n            </Heading>\n          </StyledHero>          \n          <BoxDetailContainer>\n            <GradientBack/>\n            <BoxContainerLeft>\n              <BoxContainerComponent boxTitle=\"BlindBox\" boxImage=\"misterybox360cow.low.gif\"/>\n            </BoxContainerLeft>\n            <BoxContainerRight>\n              <BoxBuyDetailComponent />\n              <BlindBoxDetailInfo />\n            </BoxContainerRight>\n          </BoxDetailContainer>\n          <Heading as=\"h1\" size=\"no\" mt=\"35px\" mb=\"15px\" style={{textAlign: \"center\", color : isDark ? 'white' : ''}}>\n            Cow Attributes\n          </Heading>\n          <ItemContainer>\n            {\n              breedsList.map((item) => {\n                return (\n                  <ItemEachContainer key={item.image} style={{backgroundImage: `url('${item.image}')`}}>\n                    <span>{item.breed}</span>\n                  </ItemEachContainer>\n                )\n              })\n            }\n          </ItemContainer>\n        </Page>\n      </StyledWrapper>\n    )\n}\n\nexport default BlindboxDetail\n"],"sourceRoot":""}
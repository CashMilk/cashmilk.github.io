{"version":3,"sources":["utils/callHelpers.ts","config/index.ts","components/Input/Input.tsx","hooks/useBlock.ts","hooks/useTokenBalance.ts","hooks/useApprove.ts","utils/getTimePeriods.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardDescription.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/LabelButton.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","hooks/useAllowance.ts","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","decimals","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BSC_BLOCK_TIME","StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","useBlock","useContext","BlockContext","useMaxTransferAmount","slowRefresh","useRefresh","useState","maxTransferAmount","setMaxTransferAmount","useEffect","cakeContract","getContract","cakeABI","getCakeAddress","call","maxTransfer","fetchMaxTransferAmount","useTotalSupply","totalSupply","setTotalSupply","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","fetchBalance","balanceOf","bal","useTokenBalance","useWallet","ethereum","fastRefresh","getTokenBalance","res","useApprove","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useSousApprove","sousId","useSousChef","updateUserAllowance","useIfoApprove","tokenContract","spenderAddress","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","Wrapper","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","size","variant","as","Link","to","Hero","Heading","attrs","text","Text","TranslateString","useI18n","color","mb","style","textAlign","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","alignItems","src","alt","width","height","StyledProgress","IfoCardProgress","progress","primaryStep","StyledIfoCardDescription","Divider","borderColor","ToggleButton","button","isOpen","IfoCardDescription","defaultIsOpen","description","setIsOpen","onClick","StyledIfoCardDetails","Item","secondary","Display","IfoCardDetails","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","raisingAmount","totalAmount","href","target","rel","ml","display","toFixed","margin","Details","Countdown","IfoCardTime","isloading","status","secondsUntilStart","secondsUntilEnd","block","countdownToUse","timeUntil","suffix","bold","ButtonWrapper","LabelButton","label","buttonLabel","disabled","fontSize","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","BalanceInput","max","symbol","onSelectMax","toLocaleString","ContributeModal","currency","contract","currencyAddress","onDismiss","setValue","pendingTx","setPendingTx","getFullDisplayBalance","title","e","currentTarget","justifyContent","fullWidth","mr","IfoCardContribute","tokenDecimals","offeringTokenBalance","setOfferingTokenBalance","claimed","userInfo","setUserInfo","contractRaisingToken","useERC20","allowance","dependency","setAllowance","fetch","useIfoAllowance","useModal","onPresentContributeModal","getOfferingAmount","userinfo","claim","isFinished","percentOfUserContribution","console","error","getBalanceNumber","StyledIfoCard","Card","getStatus","currentBlock","startBlock","endBlock","IfoCard","ifo","id","releaseBlockNumber","blocksRemaining","startBlockNum","endBlockNum","state","setState","useIfoContract","Ribbon","variantColor","getRibbonComponent","fetchProgress","Promise","all","parseInt","totalBlocks","isActive","ribbon","UnlockButton","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","activeIfo","BaseLayout","sm","ul","ifosConfig","find","Ifo","IfoCards","inactiveIfo","filter","PastIfo","map","Ifos","path","useTheme","isDark","Page","Container","exact","CurrentIfo"],"mappings":"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","file":"static/js/16.730e99fe.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  // Hardcoded hack by CryptoWhatElse for pool number 0 which has only 9 decimals (COW)\n  const decimals = pid === 0 ? 9 : 18 // Edited 3(Cow) to 5 (Milk)\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  // Hardcoded hack by CryptoWhatElse for pool number 0 which has only 9 decimals (COW)\n  const decimals = pid === 0 ? 9 : 18   // Edited 3(Cow) to 5 (Milk)\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\nexport const useMaxTransferAmount = () => {\n  const { slowRefresh } = useRefresh()\n  const [maxTransferAmount, setMaxTransferAmount] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchMaxTransferAmount() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const maxTransfer = await cakeContract.methods.maxTransferAmount().call()\n      setMaxTransferAmount(new BigNumber(maxTransfer.toString()))\n    }\n\n    fetchMaxTransferAmount()\n  }, [slowRefresh])\n\n  return maxTransferAmount\n}\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'cashcow-uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Next IFO\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          Past IFOs\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from 'cashcow-uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n {/* background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);  */}\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    \n      \n        <div>\n          <Heading as=\"h1\" size=\"lg\" color=\"text\" mb=\"25px\" style={{ textAlign: 'center' }}>\n            {TranslateString(282, 'IFO: Initial Farm Offerings')}\n          </Heading>\n          <Heading as=\"h4\" color=\"text\" mb=\"50px\" style={{ textAlign: 'center' }}>\n            {TranslateString(502, 'Buy new tokens directly on Cash Milk Finance.')}\n            \n         \n\t\t  </Heading>\n        </div>\n     \n   \n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from 'cashcow-uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Progress } from 'cashcow-uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst StyledProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <StyledProgress>\n      <Progress primaryStep={progress} />\n    </StyledProgress>\n  )\n}\n\nexport default IfoCardProgress\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'cashcow-uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDescriptionProps {\n  defaultIsOpen?: boolean\n  description: string\n}\n\nconst StyledIfoCardDescription = styled.div`\n  margin-top: 24px;\n  margin-bottom: 24px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n`\n\nconst ToggleButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n  display: block;\n  font-weight: 600;\n  outline: 0;\n  padding: 24px 16px;\n  width: 100%;\n`\n\nconst Description = styled(Text)<{ isOpen: boolean }>`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n`\n\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const TranslateString = useI18n()\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledIfoCardDescription>\n      <Divider />\n      <ToggleButton onClick={handleClick}>\n        {isOpen ? TranslateString(999, 'Hide') : TranslateString(999, 'Show')}\n      </ToggleButton>\n      <Description isOpen={isOpen}>{description}</Description>\n    </StyledIfoCardDescription>\n  )\n}\n\nexport default IfoCardDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, LinkExternal, Link } from 'cashcow-uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDetailsProps {\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n}\n\nconst StyledIfoCardDetails = styled.div`\n  margin-bottom: 24px;\n`\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\n  launchDate,\n  launchTime,\n  saleAmount,\n  raiseAmount,\n  cakeToBurn,\n  projectSiteUrl,\n  raisingAmount,\n  totalAmount,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <StyledIfoCardDetails>\n        <Item>\n          <Display>{TranslateString(582, 'Launch Time')}</Display>\n          <Text>\n            {launchDate},\n            <Link\n              href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\n              target=\"blank\"\n              rel=\"noopener noreferrer\"\n              ml=\"4px\"\n              style={{ display: 'inline' }}\n            >\n              {launchTime}\n            </Link>\n          </Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(584, 'For Sale')}</Display>\n          <Text>{saleAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'To raise (USD)')}</Display>\n          <Text>{raiseAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(586,'MILK to burn (USD)' )}</Display>\n          <Text>{cakeToBurn}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\n          <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(6)}%`}</Text>\n        </Item>\n      </StyledIfoCardDetails>\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n        {TranslateString(412, 'View project site')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default IfoCardDetails\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, Text } from 'cashcow-uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  isloading: boolean\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  block: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ isloading, status, secondsUntilStart, secondsUntilEnd, block }) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (isloading) {\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\n  }\n\n  if (countdownToUse <= 0) {\n    return (\n      <Details>\n        <Text bold>{TranslateString(999, 'Finished!')}</Text>\n      </Details>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\n        (View blocks)\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React, { ButtonHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from 'cashcow-uikit'\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n  label?: string\n  buttonLabel: string\n  disabled?: boolean\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: solid 1px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border-color: ${({ theme }) => theme.colors.borderColor};\n  padding-left: 16px;\n`\n\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\n  return (\n    <div>\n      {label && (\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {label}\n        </Text>\n      )}\n      <ButtonWrapper>\n        <Text bold fontSize=\"20px\">\n          {value}\n        </Text>\n        <Button onClick={onClick} disabled={disabled}>\n          {buttonLabel}\n        </Button>\n      </ButtonWrapper>\n    </div>\n  )\n}\n\nexport default LabelButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'cashcow-uikit'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from './Input'\n\ninterface Props extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Modal, Button, Flex, LinkExternal } from 'cashcow-uikit'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss }) => {\n  const [value, setValue] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress))\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <BalanceInput\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        symbol={currency}\n        max={balance}\n        onSelectMax={() => setValue(balance.toString())}\n      />\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\n          Cancel\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await contract.methods\n              .deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString())\n              .send({ from: account })\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n      <LinkExternal\n        href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n        style={{ margin: 'auto' }}\n      >\n        {`Get ${currency}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React, { useState, useEffect } from 'react'\nimport { useModal, Button, Text } from 'cashcow-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { useERC20 } from 'hooks/useContract'\nimport { useIfoAllowance } from 'hooks/useAllowance'\nimport { useIfoApprove } from 'hooks/useApprove'\nimport { IfoStatus } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport LabelButton from './LabelButton'\nimport ContributeModal from './ContributeModal'\n\nexport interface Props {\n  address: string\n  currency: string\n  currencyAddress: string\n  contract: Contract\n  status: IfoStatus\n  raisingAmount: BigNumber\n  tokenDecimals: number\n}\n\nconst IfoCardContribute: React.FC<Props> = ({\n  address,\n  currency,\n  currencyAddress,\n  contract,\n  status,\n  raisingAmount,\n  tokenDecimals,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const [offeringTokenBalance, setOfferingTokenBalance] = useState(new BigNumber(0))\n  const [userInfo, setUserInfo] = useState({ amount: 0, claimed: false })\n\n  const { account } = useWallet()\n  const contractRaisingToken = useERC20(currencyAddress)\n  const allowance = useIfoAllowance(contractRaisingToken, address, pendingTx)\n  const onApprove = useIfoApprove(contractRaisingToken, address)\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\n  )\n\n  useEffect(() => {\n    const fetch = async () => {\n      const balance = new BigNumber(await contract.methods.getOfferingAmount(account).call())\n      const userinfo = await contract.methods.userInfo(account).call()\n\n      setUserInfo(userinfo)\n      setOfferingTokenBalance(balance)\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, contract.methods, pendingTx])\n\n  if (allowance === null) {\n    return null\n  }\n\n  const claim = async () => {\n    setPendingTx(true)\n    await contract.methods.harvest().send({ from: account })\n    setPendingTx(false)\n  }\n  const isFinished = status === 'finished'\n  const percentOfUserContribution = new BigNumber(userInfo.amount).div(raisingAmount).times(100)\n\n  if (allowance <= 0) {\n    return (\n      <Button\n        fullWidth\n        disabled={pendingTx || isFinished}\n        onClick={async () => {\n          try {\n            setPendingTx(true)\n            await onApprove()\n            setPendingTx(false)\n          } catch (e) {\n            setPendingTx(false)\n            console.error(e)\n          }\n        }}\n      >\n        Approve\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      <LabelButton\n        disabled={pendingTx || userInfo.claimed}\n        buttonLabel={isFinished ? 'Claim' : 'Contribute'}\n        label={isFinished ? 'Your tokens to claim' : `Your contribution (${currency})`}\n        value={\n          // eslint-disable-next-line no-nested-ternary\n          isFinished\n            ? userInfo.claimed\n              ? 'Claimed'\n              : getBalanceNumber(offeringTokenBalance, tokenDecimals).toFixed(4)\n            : getBalanceNumber(new BigNumber(userInfo.amount)).toFixed(4)\n        }\n        onClick={isFinished ? claim : onPresentContributeModal}\n      />\n      <Text fontSize=\"14px\" color=\"textSubtle\">\n        {isFinished\n          ? `You'll be refunded any excess tokens when you claim`\n          : `${percentOfUserContribution.toFixed(6)}% of total`}\n      </Text>\n    </>\n  )\n}\n\nexport default IfoCardContribute\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, CardRibbon } from 'cashcow-uikit'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { useIfoContract } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardDescription from './IfoCardDescription'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardTime from './IfoCardTime'\nimport IfoCardContribute from './IfoCardContribute'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n\n`\n\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus | null => {\n  if (currentBlock < startBlock) {\n    return 'coming_soon'\n  }\n\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\n    return 'live'\n  }\n\n  if (currentBlock > endBlock) {\n    return 'finished'\n  }\n\n  return null\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n  if (status === 'finished') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'FINISHED')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const {\n    id,\n    address,\n    name,\n    subTitle,\n    description,\n    launchDate,\n    launchTime,\n    saleAmount,\n    raiseAmount,\n    cakeToBurn,\n    projectSiteUrl,\n    currency,\n    currencyAddress,\n    tokenDecimals,\n    releaseBlockNumber,\n  } = ifo\n  const [state, setState] = useState({\n    isloading: true,\n    status: null,\n    blocksRemaining: 0,\n    secondsUntilStart: 0,\n    progress: 0,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startBlockNum: 0,\n    endBlockNum: 0,\n  })\n  const { account } = useWallet()\n  const contract = useIfoContract(address)\n\n  const currentBlock = useBlock()\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [startBlock, endBlock, raisingAmount, totalAmount] = await Promise.all([\n        contract.methods.startBlock().call(),\n        contract.methods.endBlock().call(),\n        contract.methods.raisingAmount().call(),\n        contract.methods.totalAmount().call(),\n      ])\n\n      const startBlockNum = parseInt(startBlock, 10)\n      const endBlockNum = parseInt(endBlock, 10)\n\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const totalBlocks = endBlockNum - startBlockNum\n      const blocksRemaining = endBlockNum - currentBlock\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentBlock > startBlockNum\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\n\n      setState({\n        isloading: false,\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\n        raisingAmount: new BigNumber(raisingAmount),\n        totalAmount: new BigNumber(totalAmount),\n        status,\n        progress,\n        blocksRemaining,\n        startBlockNum,\n        endBlockNum,\n      })\n    }\n\n    fetchProgress()\n  }, [currentBlock, contract, releaseBlockNumber, setState])\n\n  const isActive = state.status === 'live'\n  const isFinished = state.status === 'finished'\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        <IfoCardProgress progress={state.progress} />\n        <IfoCardTime\n          isloading={state.isloading}\n          status={state.status}\n          secondsUntilStart={state.secondsUntilStart}\n          secondsUntilEnd={state.secondsUntilEnd}\n          block={isActive || isFinished ? state.endBlockNum : state.startBlockNum}\n        />\n        {!account && <UnlockButton fullWidth />}\n        {(isActive || isFinished) && (\n          <IfoCardContribute\n            address={address}\n            currency={currency}\n            currencyAddress={currencyAddress}\n            contract={contract}\n            status={state.status}\n            raisingAmount={state.raisingAmount}\n            tokenDecimals={tokenDecimals}\n          />\n        )}\n        <IfoCardDescription description={description} />\n        <IfoCardDetails\n          launchDate={launchDate}\n          launchTime={launchTime}\n          saleAmount={saleAmount}\n          raiseAmount={raiseAmount}\n          cakeToBurn={cakeToBurn}\n          projectSiteUrl={projectSiteUrl}\n          raisingAmount={state.raisingAmount}\n          totalAmount={state.totalAmount}\n        />\n      </CardBody>\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from 'cashcow-uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      \n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport Page from 'components/layout/Page'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos : React.FC = () => {\n  const { path } = useRouteMatch()\nconst {isDark}=useTheme(); \n  return (\n    <Page\n\tstyle={{\n\t\t       \n      }}\n\t>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </Container>\n    </Page>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}
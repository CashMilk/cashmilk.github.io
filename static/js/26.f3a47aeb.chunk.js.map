{"version":3,"sources":["config/constants/airnfts.ts","views/MyNfts/components/EachNft.tsx","views/MyNfts/index.tsx"],"names":["airNFTs","NftEachItemContainer","styled","div","ItemTop","NftImageContainer","NftImage","Title","TitleText","ItemSeperation","ItemBottom","ItemTitle","ItemValue","ItemValueText","ItemValueToken","web3","Web3","givenProvider","EachNft","eachMyToken","account","useWallet","isDark","useTheme","useState","imageIpfsHash","setImageIpfsHash","name","setName","flgList","setFlgList","listedPrice","setListedPrice","milkPrice","setMilkPrice","cakePriceUsd","usePriceCakeBusd","marketContract","useMemo","eth","Contract","Market","abi","getMarketAddress","fetchMyNftImage","useCallback","a","fetch","tokenHash","res","json","imageUrl","image","isAIR","slice","PINATA_BASE_URI","fetchItemsCreated","methods","call","from","i","length","tokenId","isSold","fromWei","price","toNumber","useEffect","style","background","backgroundImage","color","getNumberSuffix","Math","round","parseInt","src","alt","width","height","marginRight","StyledHero","NftItemContainer","MyNfts","myTokens","setMyTokens","happyCowsContract","HappyCows","getHappyCowAddress","airnftContract","AirNfts","getAirNftAddress","getTokenHashes","tmpMyTokens","fetchMyNfts","happyCowTokens","tokenIds","_","map","itm","push","airNftOwners","nft","ownerOf","Promise","all","owners","owner","idx","items","tokenIdLength","itemId","currentIndex","nftContract","myTokenHashes","tokenURI","result","Page","as","size","mb","textAlign","EachMyToken","index","to","className"],"mappings":"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","file":"static/js/26.f3a47aeb.chunk.js","sourcesContent":["const airNFTs: string[] = [\n'275773',\n'275774',\n'275775',\n'275776',\n'275777',\n'275778',\n'275779',\n'275780',\n'275781',\n'275782',\n'275783',\n'275784',\n'275785',\n'275786',\n'275787',\n'275788',\n'275789',\n'275790',\n'275791',\n'275792',\n'275793',\n'275794',\n'275795',\n'275796',\n'275797',\n'275798',\n'275799',\n'275800',\n'275801',\n'275802',\n'275803',\n'275747',\n'275748',\n'275749',\n'275750',\n'275751',\n'275752',\n'275753',\n'275754',\n'275755',\n'275756',\n'275762',\n'275763',\n'275772',\n'275765',\n'275766',\n'275767',\n'275768',\n'275769',\n'275770',\n'275771',\n'275804',\n'275805',\n'275806',\n'275807',\n'275808',\n'275809',\n'275810',\n'275811',\n'275812',\n'275813',\n'275814',\n'275815',\n'275816',\n'275817',\n'275818',\n'275819',\n'275820',\n'275821',\n'275822',\n'275823',\n'275824',\n'275825',\n'275826',\n'275828',\n'275830',\n'275832',\n'275833',\n'275834',\n'275835',\n'275836',\n'275837',\n'275838',\n'275839',\n'275840',\n'275841',\n'275842',\n'275843',\n'275844',\n'275845',\n'275846',\n'275847',\n'275848',\n'275849',\n'275850',\n'275851',\n'275852',\n'275853',\n'275854',\n'275855'\n]\n\nexport default airNFTs\n","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport styled from 'styled-components'\nimport Web3 from 'web3'\nimport Market from 'config/abi/Market.json'\nimport { fromWei, AbiItem } from 'web3-utils'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { getMarketAddress } from 'utils/addressHelpers'\nimport useTheme from 'hooks/useTheme'\nimport { PINATA_BASE_URI } from 'config/constants/nfts'\nimport { getNumberSuffix } from 'utils/formatBalance'\n\nconst NftEachItemContainer = styled.div`\n  cursor: pointer;\n  flex: 1;\n  margin-right: 15px;\n  margin-bottom: 15px;\n  border-radius: 16px;\n  background: #fff;\n  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 3%), 0 4px 6px -2px rgb(0 0 0 / 1%);\n  position: relative;\n`\nconst ItemTop = styled.div`\n  paddingtop: 2px;\n`\n\nconst NftImageContainer = styled.div`\n  position: relative;\n  padding-bottom: 100%;\n  height: 0;\n  border-top-right-radius: 16px;\n  border-top-left-radius: 16px;\n  overflow: hidden;\n`\n\nconst NftImage = styled.div`\n  transition: transform 0.3s ease, -webkit-transform 0.3s ease;\n  transform-origin: center;\n  background-size: auto 100%;\n  background-position: 50%;\n  background-repeat: no-repeat;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  &:hover {\n    transform: scale(1.04);\n  }\n`\nconst Title = styled.div`\n  height: 68px;\n  padding: 0 24px;\n  display: flex;\n  align-items: center;\n`\n\nconst TitleText = styled.div`\n  width: 100%;\n  font-size: 18px;\n  line-height: 1.2;\n  color: #431216;\n  word-break: break-word;\n  font-weight: 700;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  line-clamp: 2;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst ItemSeperation = styled.div`\n  height: 1px;\n  min-width: unset;\n  background-image: url(../images/line.jpg);\n  background-repeat: repeat-x;\n  position: relative;\n  background-size: contain;\n  background-position: 50%;\n`\n\nconst ItemBottom = styled.div`\n  padding: 12px 24px 20px;\n  margin: 0;\n`\n\nconst ItemTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n  color: #694f4e;\n`\n\nconst ItemValue = styled.div`\n  align-items: center;\n  color: #431216;\n  margin-top: 5px;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst ItemValueText = styled.div`\n  font-size: 22px;\n  font-weight: 700;\n`\n\nconst ItemValueToken = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n`\n\nconst web3 = new Web3(Web3.givenProvider)\n\nexport interface EachNftInterface {\n  eachMyToken?: any\n}\n\nconst EachNft = ({ eachMyToken }: EachNftInterface) => {\n  const { account } = useWallet()\n  const { isDark } = useTheme()\n\n  const [imageIpfsHash, setImageIpfsHash] = useState('')\n  const [name, setName] = useState('')\n  const [flgList, setFlgList] = useState(false)\n  const [listedPrice, setListedPrice] = useState('')\n  // const [itemId, setItemId] = useState(0);\n  const [milkPrice, setMilkPrice] = useState(0)\n\n  const cakePriceUsd = usePriceCakeBusd()\n\n  const marketContract = useMemo(() => {\n    return new web3.eth.Contract(Market.abi as AbiItem[], getMarketAddress())\n  }, [])\n\n  // const happyCowContract = useMemo(() => {\n  //     return new web3.eth.Contract(HappyCows.abi as AbiItem[], getHappyCowAddress())\n  // }, [])\n\n  const fetchMyNftImage = useCallback(async () => {\n    try {\n      const res = await fetch(eachMyToken.tokenHash)\n      const json = await res.json()\n      let imageUrl = json.image\n      if (!eachMyToken.isAIR) {\n        imageUrl = imageUrl.slice(7)\n        setImageIpfsHash(`${PINATA_BASE_URI}${imageUrl}`)\n      } else setImageIpfsHash('https://ipfs.io/ipfs/QmenL2FwtXn8vpbNWjQBkH4Fbb34E4w4GyMa6piRGgngh2')\n      setName(json.name)\n    } catch (e) {\n      // console.log(e);\n    }\n  }, [eachMyToken])\n\n  const fetchItemsCreated = useCallback(async () => {\n    const res = await marketContract.methods.fetchItemsCreated().call({ from: account })\n    for (let i = 0; i < res.length; i++) {\n      if (eachMyToken.tokenId === res[i].tokenId && res[i].isSold === false) {\n        setFlgList(true)\n        setListedPrice(fromWei(res[i].price, 'ether'))\n        break\n      }\n    }\n\n    // const owner = await happyCowContract.methods.ownerOf(eachMyToken.tokenId).call();\n    // setItemId(eachMyToken.itemId);\n\n    setMilkPrice(cakePriceUsd.toNumber())\n  }, [account, marketContract, eachMyToken, cakePriceUsd])\n\n  useEffect(() => {\n    fetchMyNftImage()\n    fetchItemsCreated()\n  }, [fetchMyNftImage, fetchItemsCreated])\n\n  return (\n    <div>\n      <NftEachItemContainer style={{ background: isDark ? '#27262c' : '' }}>\n        <ItemTop>\n          <NftImageContainer>\n            <NftImage style={{ backgroundImage: `url(${imageIpfsHash})` }} />\n          </NftImageContainer>\n          <Title>\n            <TitleText style={{ color: isDark ? 'white' : '' }}>\n              <div>{name}</div>\n            </TitleText>\n          </Title>\n        </ItemTop>\n        <ItemSeperation />\n        {flgList ? (\n          <ItemBottom>\n            <ItemTitle style={{ color: isDark ? 'white' : '' }}>\n              Sale Price\n              <span> ≈ ${getNumberSuffix(Math.round(milkPrice * parseInt(listedPrice) * 100) / 100)}</span>\n            </ItemTitle>\n            <ItemValue style={{ color: isDark ? 'white' : '' }}>\n              <ItemValueText>{getNumberSuffix((listedPrice),0)}</ItemValueText>\n              <ItemValueToken>\n                <img\n                  src=\"/images/farms/milk.png\"\n                  alt=\"token\"\n                  style={{ width: '18px', height: '18px', marginRight: '4px' }}\n                />\n                MILK\n              </ItemValueToken>\n            </ItemValue>\n          </ItemBottom>\n        ) : (\n          <ItemBottom>\n            <div style={{ height: 50, color: isDark ? 'white' : '' }}>Not Listed</div>\n          </ItemBottom>\n        )}\n      </NftEachItemContainer>\n    </div>\n  )\n}\n\nexport default EachNft\n","import _ from 'lodash'\nimport React, { useEffect, useState, useMemo, useCallback } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Heading } from 'cashcow-uikit'\nimport { AbiItem } from 'web3-utils'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport Web3 from 'web3'\nimport AirNfts from 'config/abi/AirNft.json'\nimport HappyCows from 'config/abi/HappyCows.json'\nimport Market from 'config/abi/Market.json'\nimport Page from 'components/layout/Page'\nimport airNFTs from 'config/constants/airnfts'\nimport { getHappyCowAddress, getMarketAddress, getAirNftAddress } from 'utils/addressHelpers'\nimport EachNft from './components/EachNft'\n\nconst StyledHero = styled.div`\n  border-bottom: 1px solid #e8e8e8;\n  margin-bottom: 20px;\n`\nconst NftItemContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -15px;\n`\n\nconst web3 = new Web3(Web3.givenProvider)\n\nconst MyNfts = () => {\n  const { account } = useWallet()\n  const [myTokens, setMyTokens] = useState([])\n  const { isDark } = useTheme();\n\n  const happyCowsContract = useMemo(() => {\n    return new web3.eth.Contract(HappyCows.abi as AbiItem[], getHappyCowAddress())\n  }, [])\n\n  const marketContract = useMemo(() => {\n    return new web3.eth.Contract(Market.abi as AbiItem[], getMarketAddress())\n  }, [])\n\n  const airnftContract = useMemo(() => {\n    return new web3.eth.Contract(AirNfts.abi as AbiItem[], getAirNftAddress())\n  }, [])\n\n  const getTokenHashes = useCallback(async () => {\n    const tmpMyTokens = []\n    const happyCowTokens = await happyCowsContract.methods.fetchMyNfts().call({ from: account })\n    const tokenIds = []\n    _.map(happyCowTokens, (itm) => {\n      tokenIds.push({ tokenId: itm, isAIR: false })\n    })\n\n    // retrieve my nft from air\n    const airNftOwners = []\n    _.map(airNFTs, (nft) => {\n      airNftOwners.push(airnftContract.methods.ownerOf(nft).call())\n    })\n    const owners = await Promise.all(airNftOwners)\n    _.map(owners, (owner, idx) => {\n      if (owner !== account) return\n\n      tokenIds.push({ tokenId: airNFTs[idx], isAIR: true })\n    })\n    const items = await marketContract.methods.fetchItemsCreated().call({ from: account })\n    const tokenIdLength = tokenIds.length\n    for (let i = 0; i < tokenIdLength; i++) {\n      if (!tmpMyTokens[i]) tmpMyTokens[i] = {}\n      tmpMyTokens[i].itemId = '0'\n    }\n    let currentIndex = 0\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].isSold === false) {\n        tokenIds.push({ tokenId: items[i].tokenId, isAIR: items[i].nftContract === getAirNftAddress() })\n        if (!tmpMyTokens[currentIndex + tokenIdLength]) tmpMyTokens[currentIndex + tokenIdLength] = {}\n        tmpMyTokens[currentIndex + tokenIdLength].itemId = items[i].itemId\n        currentIndex++\n      }\n    }\n\n    const myTokenHashes = []\n    for (let i = 0; i < tokenIds.length; i++) {\n      if (!tokenIds[i].isAIR) myTokenHashes.push(happyCowsContract.methods.tokenURI(tokenIds[i].tokenId).call())\n      else myTokenHashes.push(airnftContract.methods.tokenURI(tokenIds[i].tokenId).call())\n    }\n    const result = await Promise.all(myTokenHashes)\n\n    for (let i = 0; i < tokenIds.length; i++) {\n      if (!tmpMyTokens[i]) tmpMyTokens[i] = {}\n      tmpMyTokens[i].tokenId = tokenIds[i].tokenId\n      tmpMyTokens[i].tokenHash = result[i]\n      tmpMyTokens[i].isAIR = tokenIds[i].isAIR\n    }\n    setMyTokens(tmpMyTokens)\n  }, [account, happyCowsContract, marketContract, airnftContract])\n  useEffect(() => {\n    getTokenHashes()\n  }, [getTokenHashes])\n\n  return (\n    <Page\n      style={{\n       \n      }}\n    >\n      <StyledHero>\n        <Heading as=\"h1\" size=\"lg\" color=\"text\" mb=\"20px\" style={{ textAlign: 'center' }}>\n          My NFTs\n        </Heading>\n      </StyledHero>\n      <NftItemContainer>\n        {myTokens.map((EachMyToken, index) => {\n          return (\n            <Link key={EachMyToken.tokenHash} to={`/myNFTs/${index}`} className=\"LinkItemContainer\">\n              <EachNft eachMyToken={EachMyToken} key={EachMyToken.tokenId} />\n            </Link>\n          )\n        })}\n      </NftItemContainer>\n    </Page>\n  )\n}\n\nexport default MyNfts\n"],"sourceRoot":""}
{"version":3,"sources":["components/Select/Select.tsx","views/NftMarket/components/NftHeader.tsx","views/NftMarket/components/NftEachItem.tsx","views/NftMarket/components/NftItems.tsx","views/NftMarket/index.tsx"],"names":["Select","options","onOptionChange","defaultOptionIndex","props","isDark","useTheme","DropDownHeader","styled","div","theme","shadows","inset","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","Box","propss","isOpen","css","DropDownList","ul","ListItem","li","dropdownRef","useRef","useState","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","event","stopPropagation","useEffect","handleClickOutside","document","addEventListener","removeEventListener","onClick","label","color","ref","map","option","index","selectedIndex","NftHeaderContainer","RightContainer","sortByItems","input","a","value","field","direction","filterByCollection","NftHeader","dispatch","useDispatch","setSortOrder","style","marginRight","background","setCollectionType","NftEachItemContainer","ItemTop","NftImageContainer","NftImage","Title","TitleText","ItemSeperation","ItemBottom","ItemTitle","ItemValue","ItemValueText","ItemValueToken","web3","Web3","givenProvider","NftEachItem","nftEachItem","account","useWallet","flgMyNft","setFlgMyNft","name","setName","image","setImage","milkPrice","setMilkPrice","cakePriceUsd","usePriceCakeBusd","happyCowsContract","useMemo","eth","Contract","HappyCows","abi","getHappyCowAddress","airnftContract","AirNfts","getAirNftAddress","fetchNft","useCallback","nftHash","isAIR","nftContract","methods","tokenURI","tokenId","call","from","seller","fetch","res","json","imageUrl","slice","PINATA_BASE_URI","toNumber","to","itemId","backgroundImage","width","height","marginLeft","viewBox","fill","xmlns","d","getNumberSuffix","Math","floor","parseInt","fromWei","price","src","alt","NftItemContainer","NftItems","marketItems","setMarketItems","sortOrder","useSelector","state","markets","collectionType","marketContract","Market","getMarketAddress","fetchNftItems","fetchMarketItems","tmpMarketItems","filteredTmpMarketItems","i","length","push","filteredMarketItems","addresses","happycow","process","airnft","j","listedTime","tmp","StyledHero","NftMarket","Page","as","size","mb","textAlign"],"mappings":"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","file":"static/js/32.cbd77851.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\n\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n  defaultOptionIndex?: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  ...props\n}) => {\n\n  const { isDark } = useTheme()\n\n  const DropDownHeader = styled.div`\n    width: 100%;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0px 16px;\n    box-shadow: ${({ theme }) => theme.shadows.inset};\n    border: 1px solid #e8e8e8;\n    border-radius: 16px;\n    background: ${isDark ? 'rgb(39, 38, 44)' : 'white'};\n    transition: border-radius 0.15s;\n  `\n\n  const DropDownListContainer = styled.div`\n    min-width: 136px;\n    height: 0;\n    position: absolute;\n    overflow: hidden;\n    background: ${isDark ? 'rgb(39, 38, 44)' : 'white'};\n    z-index: ${({ theme }) => theme.zIndices.dropdown};\n    transition: transform 0.15s, opacity 0.15s;\n    transform: scaleY(0);\n    transform-origin: top;\n    opacity: 0;\n    width: 100%;\n\n    ${({ theme }) => theme.mediaQueries.sm} {\n      min-width: 168px;\n    }\n  `\n\n  const DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n    cursor: pointer;\n    width: 100%;\n    position: relative;\n    background: white;\n    border-radius: 16px;\n    height: 40px;\n    min-width: 136px;\n    user-select: none;\n    z-index: 20;\n\n    ${({ theme }) => theme.mediaQueries.sm} {\n      min-width: 168px;\n    }\n\n    ${(propss) =>\n      propss.isOpen &&\n      css`\n        ${DropDownHeader} {\n          border-bottom: 1px solid #e8e8e8;\n          border-radius: 16px 16px 0 0;\n        }\n\n        ${DropDownListContainer} {\n          height: auto;\n          transform: scaleY(1);\n          opacity: 1;\n          border: 1px solid #e8e8e8;\n          border-top-width: 0;\n          border-radius: 0 0 16px 16px;\n          box-shadow: #e8e8e8;\n        }\n      `}\n\n    svg {\n      position: absolute;\n      right: 16px;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n  `\n\n  const DropDownList = styled.ul`\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n    z-index: ${({ theme }) => theme.zIndices.dropdown};\n  `\n\n  const ListItem = styled.li`\n    list-style: none;\n    padding: 8px 16px;\n    &:hover {\n      background: ${isDark ? '#4e4e4e' : '#e8e8e8'};\n    }\n  `\n\n\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    \n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setSortOrder, setCollectionType } from 'state/markets'\nimport styled from 'styled-components'\nimport useTheme from 'hooks/useTheme'\nimport Select from '../../../components/Select/Select'\n\nconst NftHeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`\nconst LeftContainer = styled.div`\n  flex: left;\n  align-items: center;\n`\n\nconst RightContainer = styled.div`\n  display: flex;\n  flex: right;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    margin-top: 10px;\n    flex-wrap: wrap;\n\n    > div {\n      width: 40%;\n      margin-top: 10px;\n    }\n  }\n`\n\nconst SearchBox = styled.div`\n  display: flex;\n  position: relative;\n`\n\nconst InputTag = styled.input`\n  border: 1px solid #e8e8e8;\n  border-radius: 12px;\n  height: 44px;\n  line-height: 44px;\n  box-sizing: border-box;\n  font-size: 16px;\n  padding: 0 68px 0 16px;\n  display: flex;\n  outline: none;\n  width: 230px;\n  color: #431216;\n  background: transparent;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`\n\nconst LinkTag = styled.a`\n  position: absolute;\n  right: 4px;\n  top: 4px;\n  bottom: 4px;\n  height: auto;\n  padding: 0 20px;\n  transform: translateY(0) !important;\n  border: 0 none;\n  background: #00d86c;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n`\n\nconst sortByItems = [\n  { label: 'Recent', value: { field: 'RecentlyListed', direction: 'desc' } },\n  { label: 'Lowest', value: { field: 'LowestPrice', direction: 'asc' } },\n  { label: 'Highest', value: { field: 'HighestPrice', direction: 'desc' } },\n]\n\nconst filterByCollection = [\n  { label: 'All', value: { field: 'All', direction: 'asc' } },\n  { label: 'Happy Cows', value: { field: 'HappyCows', direction: 'desc' } },\n  { label: 'Genesis Lands', value: { field: 'AirNFT', direction: 'asc' } },\n]\n\nconst NftHeader = () => {\n  const dispatch = useDispatch()\n  const { isDark } = useTheme()\n\n  return (\n    <NftHeaderContainer>\n     \n      <RightContainer>\n        <Select\n          options={sortByItems}\n          onOptionChange={(option) => dispatch(setSortOrder(option.value))}\n          style={{ marginRight: '15px', background: isDark ? '#27262c' : '' }}\n        />\n        <Select\n          options={filterByCollection}\n          onOptionChange={(option) => dispatch(setCollectionType(option.value))}\n          style={{ marginRight: '15px' }}\n        />\n        {/* <SearchBox>\n          <InputTag placeholder=\"Please enter keywords to search\" />\n          <LinkTag>\n            <img alt=\"search icon\" style={{ width: 30, height: 30 }} src=\"https://img.icons8.com/FFFFFF/search\" />\n          </LinkTag>\n        </SearchBox> */}\n      </RightContainer>\n    </NftHeaderContainer>\n  )\n}\n\nexport default NftHeader\n","import React, { useState, useEffect, useMemo, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Web3 from 'web3'\nimport { fromWei, AbiItem } from 'web3-utils'\nimport AirNfts from 'config/abi/AirNft.json'\nimport HappyCows from 'config/abi/HappyCows.json'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { getHappyCowAddress, getAirNftAddress } from 'utils/addressHelpers'\nimport useTheme from 'hooks/useTheme'\nimport { PINATA_BASE_URI } from 'config/constants/nfts'\nimport { getNumberSuffix } from 'utils/formatBalance'\n\nconst NftEachItemContainer = styled.div`\n  cursor: pointer;\n  min-width: 230px;\n  max-width: calc(25% - 30px);\n  flex: 1;\n  margin: 30px 15px 0;\n  border-radius: 16px;\n  background: #fff;\n  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 3%), 0 4px 6px -2px rgb(0 0 0 / 1%);\n  position: relative;\n`\nconst ItemTop = styled.div`\n  paddingtop: 2px;\n`\nconst NftImageContainer = styled.div`\n  position: relative;\n  padding-bottom: 100%;\n  height: 0;\n  border-top-right-radius: 16px;\n  border-top-left-radius: 16px;\n  overflow: hidden;\n`\n\nconst NftImage = styled.div`\n  transition: transform 0.3s ease, -webkit-transform 0.3s ease;\n  transform-origin: center;\n  background-size: auto 100%;\n  background-position: 50%;\n  background-repeat: no-repeat;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  &:hover {\n    transform: scale(1.04);\n  }\n`\nconst Title = styled.div`\n  height: 68px;\n  padding: 0 24px;\n  display: flex;\n  align-items: center;\n`\n\nconst TitleText = styled.div`\n  font-size: 18px;\n  line-height: 1.2;\n  color: #431216;\n  word-break: break-word;\n  font-weight: 700;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-clamp: 2;\n  display: flex;\n  align-items: center;\n`\n\nconst ItemSeperation = styled.div`\n  height: 1px;\n  min-width: unset;\n  background-image: url(../images/line.jpg);\n  background-repeat: repeat-x;\n  position: relative;\n  background-size: contain;\n  background-position: 50%;\n`\n\nconst ItemBottom = styled.div`\n  padding: 12px 24px 20px;\n  margin: 0;\n`\n\nconst ItemTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n  color: #694f4e;\n`\n\nconst ItemValue = styled.div`\n  align-items: center;\n  color: #431216;\n  margin-top: 5px;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst ItemValueText = styled.div`\n  font-size: 22px;\n  font-weight: 700;\n`\n\nconst ItemValueToken = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n`\nconst web3 = new Web3(Web3.givenProvider)\n\nexport interface NftEachItemInterface {\n  nftEachItem?: any\n}\n\nconst NftEachItem = ({ nftEachItem }: NftEachItemInterface) => {\n  const { account } = useWallet()\n  const { isDark } = useTheme()\n  const [flgMyNft, setFlgMyNft] = useState(false)\n  const [name, setName] = useState('')\n  const [image, setImage] = useState('')\n  const [milkPrice, setMilkPrice] = useState(0)\n\n  const cakePriceUsd = usePriceCakeBusd()\n\n  const happyCowsContract = useMemo(() => {\n    return new web3.eth.Contract(HappyCows.abi as AbiItem[], getHappyCowAddress())\n  }, [])\n\n  const airnftContract = useMemo(() => {\n    return new web3.eth.Contract(AirNfts.abi as AbiItem[], getAirNftAddress())\n  }, [])\n\n  const fetchNft = useCallback(async () => {\n    let nftHash = null\n    const isAIR = nftEachItem.nftContract === getAirNftAddress()\n    if (isAIR) nftHash = await airnftContract.methods.tokenURI(nftEachItem.tokenId).call({ from: account })\n    else nftHash = await happyCowsContract.methods.tokenURI(nftEachItem.tokenId).call({ from: account })\n    if (nftEachItem.seller === account) {\n      setFlgMyNft(true)\n    }\n    const res = await fetch(nftHash)\n    const json = await res.json()\n\n    let imageUrl = json.image\n    if (isAIR) {\n      setImage('https://ipfs.io/ipfs/QmenL2FwtXn8vpbNWjQBkH4Fbb34E4w4GyMa6piRGgngh2')\n    } else {\n      imageUrl = imageUrl.slice(7)\n      setImage(`${PINATA_BASE_URI}${imageUrl}`)\n    }\n    setName(json.name)\n\n    setMilkPrice(cakePriceUsd.toNumber())\n  }, [account, happyCowsContract, airnftContract, nftEachItem, cakePriceUsd])\n\n  useEffect(() => {\n    fetchNft()\n  }, [fetchNft])\n  return (\n    <Link to={`/nft-market/${nftEachItem.itemId}`}>\n      <NftEachItemContainer style={{ background: isDark ? '#27262c' : '' }}>\n        <ItemTop>\n          <NftImageContainer>\n            <NftImage style={{ backgroundImage: `url(${image})` }} />\n          </NftImageContainer>\n          <Title>\n            <TitleText style={{ color: isDark ? 'white' : '' }}>\n              {`${name}`}\n              {flgMyNft ? (\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  style={{ marginLeft: '15px' }}\n                  viewBox=\"0 0 14 14\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M7 0C3.12667 0 0 3.12667 0 7C0 10.8733 3.12667 14 7 14C10.8733 14 14 10.8733 14 7C14 3.12667 10.8733 0 7 0ZM7 12.4444C5.42889 12.4444 3.99778 11.7756 3.01778 10.7022C3.04889 9.25556 3.84222 8.01111 5.02444 7.32667C5.11778 7.26444 5.22667 7.21778 5.33556 7.17111C4.51111 6.62667 3.95111 5.67778 3.95111 4.62C3.95111 2.98667 5.24222 1.64889 6.86 1.55556C6.87556 1.55556 6.89111 1.55556 6.89111 1.55556C6.93778 1.55556 6.96889 1.55556 7.01556 1.55556C7.03111 1.55556 7.06222 1.55556 7.07778 1.55556C7.17111 1.55556 7.26444 1.55556 7.37333 1.57111C8.69556 1.72667 9.8 2.75333 10.0333 4.06C10.2511 5.35111 9.67556 6.53333 8.69556 7.17111C8.80445 7.21778 8.91333 7.26444 9.00667 7.32667C10.1733 7.99556 10.9822 9.25556 11.0133 10.7022C10.0022 11.7756 8.57111 12.4444 7 12.4444Z\"\n                    fill={isDark ? 'white' : '#431216'}\n                  />\n                </svg>\n              ) : (\n                ''\n              )}\n            </TitleText>\n          </Title>\n        </ItemTop>\n        <ItemSeperation />\n        <ItemBottom>\n          <ItemTitle style={{ color: isDark ? 'white' : '' }}>\n            Sale Price\n            <span>\n              {' '}\n              ≈ $ {getNumberSuffix(Math.floor(milkPrice * parseInt(fromWei(nftEachItem.price, 'ether')) * 100) / 100)}\n            </span>\n          </ItemTitle>\n          <ItemValue>\n            <ItemValueText style={{ color: isDark ? 'white' : '' }}>\n              {getNumberSuffix(fromWei(nftEachItem.price, 'ether'),0)}\n            </ItemValueText>\n            <ItemValueToken style={{ color: isDark ? 'white' : '' }}>\n              <img\n                src=\"/images/farms/milk.png\"\n                alt=\"token\"\n                style={{ width: '18px', height: '18px', marginRight: '4px' }}\n              />\n              MILK\n            </ItemValueToken>\n          </ItemValue>\n        </ItemBottom>\n      </NftEachItemContainer>\n    </Link>\n  )\n}\n\nexport default NftEachItem\n","import React, { useState, useEffect, useMemo, useCallback } from 'react'\nimport styled from 'styled-components'\nimport Market from 'config/abi/Market.json'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { AbiItem } from 'web3-utils'\nimport Web3 from 'web3'\nimport { useSelector } from 'react-redux'\nimport { getMarketAddress } from 'utils/addressHelpers'\nimport addresses from 'config/constants/contracts'\nimport NftEachItem from './NftEachItem'\nimport { State } from '../../../state/types'\n\nconst NftItemContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -15px;\n`\nconst chainId = process.env.REACT_APP_CHAIN_ID\nconst web3 = new Web3(Web3.givenProvider)\n\nconst NftItems = () => {\n  const { account } = useWallet()\n  const [marketItems, setMarketItems] = useState([])\n  const sortOrder = useSelector((state: State) => state.markets.sortOrder)\n  const collectionType = useSelector((state: State) => state.markets.collectionType)\n\n  const marketContract = useMemo(() => {\n    return new web3.eth.Contract(Market.abi as AbiItem[], getMarketAddress())\n  }, [])\n\n  const fetchNftItems = useCallback(async () => {\n    const tmpMarketItems = await marketContract.methods.fetchMarketItems().call({ from: account })\n    const filteredTmpMarketItems = []\n    for (let i = 0; i < tmpMarketItems.length; i++) {\n      // if(tmpMarketItems[i].seller !== account) {\n      filteredTmpMarketItems.push(tmpMarketItems[i])\n      // }\n    }\n    let filteredMarketItems = []\n    let index = 0\n    switch (collectionType.field) {\n      case 'All':\n        filteredMarketItems = filteredTmpMarketItems\n        break\n      case 'HappyCows':\n        for (let i = 0; i < filteredTmpMarketItems.length; i++) {\n          if (filteredTmpMarketItems[i].nftContract === addresses.happycow[chainId]) {\n            filteredMarketItems[index] = filteredTmpMarketItems[i]\n            index++\n          }\n        }\n        break\n      case 'AirNFT':\n        for (let i = 0; i < filteredTmpMarketItems.length; i++) {\n          if (filteredTmpMarketItems[i].nftContract === addresses.airnft[chainId]) {\n            filteredMarketItems[index] = filteredTmpMarketItems[i]\n            index++\n          }\n        }\n        break\n      default:\n        break\n    }\n\n    switch (sortOrder.field) {\n      case 'RecentlyListed':\n        for (let i = 0; i < filteredMarketItems.length - 1; i++) {\n          for (let j = i + 1; j < filteredMarketItems.length; j++) {\n            if (parseInt(filteredMarketItems[i].listedTime) < parseInt(filteredMarketItems[j].listedTime)) {\n              const tmp = filteredMarketItems[i]\n              filteredMarketItems[i] = filteredMarketItems[j]\n              filteredMarketItems[j] = tmp\n            }\n          }\n        }\n        break\n      case 'LowestPrice':\n        for (let i = 0; i < filteredMarketItems.length - 1; i++) {\n          for (let j = i + 1; j < filteredMarketItems.length; j++) {\n            if (parseInt(filteredMarketItems[i].price) > parseInt(filteredMarketItems[j].price)) {\n              const tmp = filteredMarketItems[i]\n              filteredMarketItems[i] = filteredMarketItems[j]\n              filteredMarketItems[j] = tmp\n            }\n          }\n        }\n        break\n      case 'HighestPrice':\n        for (let i = 0; i < filteredMarketItems.length - 1; i++) {\n          for (let j = i + 1; j < filteredMarketItems.length; j++) {\n            if (parseInt(filteredMarketItems[i].price) < parseInt(filteredMarketItems[j].price)) {\n              const tmp = filteredMarketItems[i]\n              filteredMarketItems[i] = filteredMarketItems[j]\n              filteredMarketItems[j] = tmp\n            }\n          }\n        }\n        break\n\n      default:\n        break\n    }\n    setMarketItems(filteredMarketItems)\n  }, [account, marketContract, collectionType, sortOrder])\n\n  useEffect(() => {\n    fetchNftItems()\n  }, [fetchNftItems])\n\n  return (\n    <NftItemContainer>\n      {marketItems.map((nftEachItem) => {\n        return <NftEachItem nftEachItem={nftEachItem} key={nftEachItem.itemId} />\n      })}\n    </NftItemContainer>\n  )\n}\n\nexport default NftItems\n","import React from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport Page from 'components/layout/Page'\nimport { Heading } from 'cashcow-uikit'\nimport NftHeader from './components/NftHeader'\nimport NftItems from './components/NftItems'\n\nconst StyledHero = styled.div`\n  border-bottom: 1px solid #e8e8e8;\n  margin-bottom: 20px;\n`\nconst NftMarket = () => {\n\n    const { isDark } = useTheme();\n    \n    return (\n        <Page\n            style={{\n               \n            }}\n        >\n            <StyledHero>\n                <Heading as=\"h1\" size=\"lg\" color=\"text\" mb=\"20px\" style={{ textAlign: 'center' }}>\n                    NFT MARKETPLACE\n                </Heading>\n            </StyledHero>\n            <NftHeader />\n            <NftItems />\n        </Page>\n    )\n}\n\nexport default NftMarket\n"],"sourceRoot":""}
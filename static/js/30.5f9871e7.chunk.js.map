{"version":3,"sources":["views/Blindbox/components/StartTime.tsx","views/Blindbox/components/ItemMainContainer.tsx","views/Blindbox/components/BlindBoxItem.tsx","views/Blindbox/index.tsx"],"names":["StartTimeContainer","styled","div","StartTimeTitle","StartTimeItems","StartTimeItem","Num","Sep","StartTime","countdown","useState","day","setDay","hour","setHour","minute","setMinute","second","setSecond","useEffect","interval","setInterval","current","Date","range","getTime","Math","floor","clearInterval","MainContainer","PhaseContainer","TitleContainer","ItemMainContainer","itemId","itemTitle","mintedAmount","setMintedAmount","startBlock","setStartBlock","currentBlock","setCurrentBlock","startTime","setStartTime","useWallet","account","connect","window","localStorage","getItem","getTotalSupply","a","web3","Web3","givenProvider","happyCowsContract","eth","Contract","HappyCows","abi","getHappyCowAddress","methods","totalSupply","call","amount","parseInt","getBlockNumber","currentBlockNumber","blockNumber","temp","timespan","style","paddingTop","fontSize","marginTop","fontWeight","color","ItemBackgroundCover","BlindBoxItem","background","ItemBackground","boxData","id","image","StyledHero","Blindbox","useTheme","isDark","Page","as","size","mb","textAlign","map","boxItem","to"],"mappings":"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","file":"static/js/30.5f9871e7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst StartTimeContainer = styled.div`\n    margin-top: 20px;\n    \n`\n\nconst StartTimeTitle = styled.div`\n    font-size: 14px;\n    color: hsla(0,0%,100%,.8);\n`\nconst StartTimeItems = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: 8px;\n`\n\nconst StartTimeItem = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst Num = styled.div`\n    box-sizing: border-box;\n    padding: 0 6px;\n    min-width: 40px;\n    font-size: 18px;\n    font-weight: 700;\n    height: 40px;\n    background: rgba(0,0,0,.5);\n    border-radius: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\nconst Sep = styled.div`\n    margin: 0 8px;\n    font-size: 18px;\n    font-weight: 700;\n`\n\nexport interface StartTimeInterface {\n    countdown?: number;\n}\n\nconst StartTime = ({ countdown }:StartTimeInterface) => {\n    const [ day, setDay ] = useState(0);\n    const [ hour, setHour ] = useState(0);\n    const [ minute, setMinute ] = useState(0);\n    const [ second, setSecond ] = useState(0);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const current = new Date();\n            const range = (countdown - current.getTime()) / 1000;\n\n            if (range < 0) {\n                setDay(0);\n                setHour(0);\n                setMinute(0);\n                setSecond(0);\n                return;\n            }\n\n            setDay(Math.floor(range / 3600 / 24));\n            setHour(Math.floor((range % (3600 * 24)) / 3600));\n            setMinute(Math.floor((range % 3600) / 60));\n            setSecond(Math.floor(range % 60));\n        }, 1000);\n\n        return () => clearInterval(interval)\n    }, [countdown]);\n\n    return (\n        <StartTimeContainer>\n            <StartTimeTitle>\n                Start Time\n            </StartTimeTitle>\n            <StartTimeItems>\n                <StartTimeItem>\n                    <Num>\n                        {day}\n                    </Num>\n                </StartTimeItem>\n                <StartTimeItem>\n                    <Sep>\n                        :\n                    </Sep>\n                    <Num>\n                        {hour}\n                    </Num>\n                </StartTimeItem>\n                <StartTimeItem>\n                    <Sep>\n                        :\n                    </Sep>\n                    <Num>\n                        {minute}\n                    </Num>\n                </StartTimeItem>\n                <StartTimeItem>\n                    <Sep>\n                        :\n                    </Sep>\n                    <Num>\n                        {second}\n                    </Num>\n                </StartTimeItem>\n                \n            </StartTimeItems>\n        </StartTimeContainer>\n    )\n}\n\nexport default StartTime\n","import React, {useState, useEffect, useMemo} from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport HappyCows from 'config/abi/HappyCows.json'\nimport Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\nimport { getHappyCowAddress } from 'utils/addressHelpers'\nimport StartTime from './StartTime'\n\nconst MainContainer = styled.div`\n    right: 60px;\n    left: 60px;\n    top: 40px;\n    bottom: 40px;\n    color: white;\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n`\nconst PhaseContainer = styled.div`\n    background: rgba(0,0,0,.12);\n    height: 30px;\n    font-size: 18px;\n    width: fit-content;\n    border-radius: 10px;\n    padding: 0 12px;\n    align-items: center;\n    justify-content:center;\n    display:flex;\n`\nconst TitleContainer = styled.div`\n    font-size: 32px;\n    font-weight: 700;\n    margin-top: 12px;\n    line-height: 1.25;\n    display: flex;\n    align-items: center;\n`\n\nexport interface ItemMainContainerInterface {\n    itemId?: number;\n    itemTitle?: string;\n}\n\nconst ItemMainContainer = ({itemId, itemTitle}: ItemMainContainerInterface) => {\n\n    const [ mintedAmount, setMintedAmount ] = useState(0);\n    const [ startBlock, setStartBlock ] = useState(0);\n    const [ currentBlock, setCurrentBlock ] = useState(0);\n    const [ startTime, setStartTime ] = useState(0);\n    const { account, connect } = useWallet()\n\n    useEffect( () => {\n        if (!account && window.localStorage.getItem('accountStatus')) {\n            connect('injected')\n        }\n\n        const getTotalSupply = async () => {\n            const web3 = new Web3(Web3.givenProvider)\n            const happyCowsContract = new web3.eth.Contract(HappyCows.abi as AbiItem[], getHappyCowAddress());\n            const amount = await happyCowsContract.methods.totalSupply().call();\n\n            setMintedAmount(parseInt(amount));\n            \n            const currentBlockNumber = await web3.eth.getBlockNumber();\n            setCurrentBlock(currentBlockNumber);\n            \n            const blockNumber = await happyCowsContract.methods.blockNumber().call();\n            setStartBlock(blockNumber);\n\n            if (blockNumber > currentBlockNumber) {\n                const current = new Date();\n                const temp = new Date(current.getTime() + (blockNumber - currentBlockNumber) * 3 * 1000);\n                const timespan = temp.getTime();\n\n                setStartTime(timespan);\n            }\n        }\n\n        getTotalSupply()\n    }, [account, connect])\n\n    return (\n        <MainContainer>\n            <PhaseContainer>\n                NFT Collectibles\n            </PhaseContainer>\n            <TitleContainer>\n                {itemTitle}\n            </TitleContainer>\n            {currentBlock !== 0 && startBlock !== 0 && currentBlock < startBlock && <StartTime countdown={startTime}/>}\n            <div style={{paddingTop: \"10px\", fontSize: \"20px\", marginTop: 'auto', fontWeight: 700, color: (1001 - mintedAmount) === 0 ? 'red' : 'lightgreen'}}>\n                {currentBlock < startBlock && 'Not started'}\n                {currentBlock > startBlock && (mintedAmount === 1000 ? 'Mint is finished' : 'Mint now')}\n            </div>\n        </MainContainer>\n    )\n}\n\nexport default ItemMainContainer\n","import React from 'react'\nimport styled from 'styled-components'\nimport ItemMainContainer from './ItemMainContainer'\n\n\nexport interface BlindBoxItemInterface {\n    itemId?: number;\n    background?: string;\n    itemTitle?: string;\n}\n\nconst ItemBackgroundCover = styled.div`\n    width: 100%;\n    height: 250px;\n    overflow: hidden;\n    position: relative;\n    margin-bottom: 25px;\n    margin-top: 25px;\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 32px;\n\n`\n\nconst BlindBoxItem = ({itemId, background, itemTitle}: BlindBoxItemInterface) => {\n    const ItemBackground = styled.div`\n        width: 100%;\n        height: 100%;\n        background-image : url(images/${background});\n        background-size: cover;\n        background-position: 0;\n        background-repeat: no-repeat;\n        cursor: pointer;\n        transition: all 1s;\n        &:hover{\n            transform: scale(1.02);\n        }\n        @media (max-width: 768px) {\n            background-position: 30%;\n        }\n        `\n    return (\n        <ItemBackgroundCover>\n            <ItemBackground>\n                <ItemMainContainer itemId={itemId} itemTitle={itemTitle}/>                \n            </ItemBackground>\n        </ItemBackgroundCover>\n    )\n}\n\n\n\nexport default BlindBoxItem\n","import React from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Heading } from 'cashcow-uikit'\nimport Page from 'components/layout/Page'\nimport BlindBoxItem from './components/BlindBoxItem'\n\nconst boxData = [\n    {\n        id: 0,\n        image: 'banner_tamano_desenfocado_2940x510.png',\n        itemTitle: 'Cows NFT'\n    },\n]\n\nconst StyledHero = styled.div`\n    border-bottom: 1px solid #e8e8e8;\n    margin-bottom: 20px;\n`\n\nconst Blindbox = () => {\n\n    const { isDark } = useTheme()\n\n    return (\n        <Page\n            style={{\n                \n            }}\n        >\n            <StyledHero>\n                <Heading as=\"h1\" size=\"lg\" color=\"text\" mb=\"20px\" style={{ textAlign: 'center' }}>\n                    Blind Box : Try Your Luck\n                </Heading>\n\t\t\t\t\n            </StyledHero>\n            {\n                boxData.map((boxItem) => {\n                    return <Link key={boxItem.id} to={`/blind-box/${boxItem.id}`}><BlindBoxItem background={boxItem.image} itemId={boxItem.id} itemTitle={boxItem.itemTitle} /></Link>\n                })\n            }\n        </Page>\n    )\n}\n\nexport default Blindbox\n"],"sourceRoot":""}
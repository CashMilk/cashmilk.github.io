{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","utils/formatBalance.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/callHelpers.ts","config/index.ts","components/Input/Input.tsx","hooks/useBlock.ts","config/constants/ifo.ts","config/constants/index.ts","components/UnlockButton.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useHarvest.ts","hooks/useApprove.ts","components/TokenInput/TokenInput.tsx","components/Tags.tsx","hooks/useStake.ts","components/layout/Flex.tsx","hooks/useUnstake.ts","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","getNumberSuffix","_value","value","Infinity","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","useWallet","refEth","useRef","useState","web3","setweb3","useEffect","current","useContract","abi","address","contractOptions","eth","Contract","contract","setContract","useIfoContract","ifo","useERC20","erc20","useCake","getCakeAddress","useRabbitMintingFarm","rabbitmintingfarm","usePancakeRabbits","pancakeRabbits","useLottery","lottery","getLotteryAddress","useMasterchef","masterChef","getMasterChefAddress","useSousChef","id","config","poolsConfig","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","process","approve","lpContract","masterChefContract","account","a","methods","options","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BSC_BLOCK_TIME","StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","useBlock","BlockContext","ifos","isActive","name","subTitle","description","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","currency","currencyAddress","tokenDecimals","releaseBlockNumber","farmsConfig","filter","farm","isCommunity","map","tokenSymbol","UnlockButton","TranslateString","connect","reset","onPresentConnectModal","useWalletModal","onClick","StyledSpacer","size","Spacer","s","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","child","i","useHarvest","farmPid","dispatch","useDispatch","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useSousHarvest","isUsingBnb","handleHarvest","updateUserPendingReward","updateUserBalance","useApprove","onApprove","useSousApprove","updateUserAllowance","useIfoApprove","tokenContract","spenderAddress","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","toLocaleString","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useSousStake","handleStake","updateUserStakedBalance","onStake","useStake","console","info","FlexLayout","SYRUPIDS","useSousUnstake","isOldSyrup","handleUnstake","onUnstake","useUnstake","Card","card","background","isFinished","CardTitle","Balance","Label","textSubtle","DetailPlaceholder","Value","Footer","isDark","Coming","style","padding","role","src","width","height","alt","as","href","external","fullWidth","mb","flex","StyledLabel","StyledText","Text","isDisabled","color","textDisabled","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","CORE","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","image","stakingTokenName","stakingTokenAddress","apy","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","block","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","QuoteToken","MILK","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","HarvestButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","f","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","textAlign","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/13.c4302869.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const getNumberSuffix = (_value, decimals = 3) => {\n  let value = _value;\n\n  if (typeof _value !== 'number') {\n    value = (new BigNumber(_value)).toNumber();\n  }\n\n  switch (true) {\n      case value === Infinity:\n          return 'Infinity';\n      case value > 1000000000:\n          return `${(value / 1000000000).toFixed(2)}B `;\n      case value > 1000000:\n          return `${(value / 1000000).toFixed(2)}M `;\n      case value > 10000:\n          return `${(value / 1000).toFixed(decimals)}k `;\n\n      default:\n          return value.toFixed(decimals);\n  }\n};","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  // Hardcoded hack by CryptoWhatElse for pool number 0 which has only 9 decimals (COW)\n  const decimals = pid === 0 ? 9 : 18 // Edited 3(Cow) to 5 (Milk)\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  // Hardcoded hack by CryptoWhatElse for pool number 0 which has only 9 decimals (COW)\n  const decimals = pid === 0 ? 9 : 18   // Edited 3(Cow) to 5 (Milk)\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [\n // {\n    // id: 'zen',\n    // address: '0xf1745a5c6aA042357892f1D058E1e6f30c36113e',\n    // isActive: true,\n    // name: 'Zen Finance (Zen)',\n    // subTitle: 'Defi on BNB Chain',\n    // description:\n      // 'Zen enables BNB holders to enjoy gaming experiences that WINk users on Tron have been enjoying for over two years.',\n    // launchDate: 'Aug. 17',\n    // launchTime: '12PM EST',\n    // saleAmount: '100,000 Zen',\n    // raiseAmount: '$0.0001',\n    // cakeToBurn: '$500,000',\n    // projectSiteUrl: '#',\n    // currency: 'BUSD',\n    // currencyAddress: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',  \n    // tokenDecimals: 8,\n    // releaseBlockNumber: 21400555,\n  // },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: true,\n    name: 'BLINk (BLK)',\n    subTitle: 'Online games on BSC',\n    description:\n      'BLINk enables BNB holders to enjoy gaming experiences that WINk users on Tron have been enjoying for over two years.',\n    launchDate: 'Nov. 20',\n    launchTime: '9PM SGT',\n    saleAmount: '100,000,000 BLINK',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://blink.wink.org',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 6,\n    releaseBlockNumber: 3279767,\n  },\n  // {\n    // id: 'ditto',\n    // address: '0x570c9eB19553526Fb35895a531928E19C7D20788', // ifo contract -->offering token ditto\n    // isActive: false,\n    // name: 'Ditto (DITTO)',\n    // subTitle: 'Next-gen elastic supply token',\n    // description:\n      // 'Ditto is the first elastic supply token on the Binance Smart Chain. Its goal is to maintain a stable price of $1, where its supply will adapt to changes in demand. All supply changes will apply equally to every wallet holding Ditto, and holders should always have the same % of the total supply',\n    // launchDate: 'Dec. 23',\n    // launchTime: '3PM SGT',\n    // saleAmount: '700,000 DITTO',\n    // raiseAmount: '$630,000',\n    // cakeToBurn: '$315,000',\n    // projectSiteUrl: 'https://ditto.money/',\n    // currency: 'CAKE-BNB LP',\n    // currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',// LP address\n    // tokenDecimals: 9,\n    // releaseBlockNumber: 3279767,\n  // },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    subTitle: 'Cross-chain Automated Market Maker',\n    description:\n      'Tenet is a cross-chain Automated Market Maker (AMM) connector that provides a decentralized Liquidity Tap for various tokens. The Liquidity Tap is the powerhouse of the Liquidity Pool, employing a dynamic algorithm to give the Liquidity Provider fairer, more efficient, and richer incentives. Tenet aims to build a cross-chain and cross-platform toolkit protocol that allows the demand side to customize the parameters of the liquidity tap, allowing them to reach out to more liquidity participants effectively and with relative ease.',\n    launchDate: 'Jan. 5',\n    launchTime: '3PM SGT',\n    saleAmount: '1,000,000 TEN',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://www.tenet.farm/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    releaseBlockNumber: 3483883,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    subTitle: 'Crypto-assets insurance trading platform',\n    description:\n      'Helmet is a peer-to-peer insurance protocol written with options trading logic, which allows anyone to create any insurance policy easily in the market. Helmet aims to enable DeFi users to be protected against the risk of price fluctuations by providing price-shield insurance for BSC assets. They provide suppliers with a range of insurance types to sell, giving a variety of hedging strategies to the market.',\n    launchDate: 'Jan. 13',\n    launchTime: '5PM SGT',\n    saleAmount: '10,000,000 Helmet',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://www.helmet.insure/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    releaseBlockNumber: 3771926,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: true,\n    name: 'Soteria',\n    subTitle: 'A blockchain based mutual to share the risk of DeFi on Binance Smart Chain',\n    description:\n      'Soteria allows users to buy insurance cover to greatly diminish or reduce the financial risk of hacks. It replaces the idea of a traditional insurance company, because it is wholly owned by the members. The model encourages engagement as members receive economic incentives for participating in Risk Assessment, Claims Assessment and Governance.',\n    launchDate: 'Jan. 21',\n    launchTime: '4PM SGT',\n    saleAmount: '1,500,000 wSOTE',\n    raiseAmount: '$525,000',\n    cakeToBurn: '$262,500',\n    projectSiteUrl: 'https://soteria.finance/#/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    releaseBlockNumber: 4086064,\n  },\n]\n\nexport default ifos\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import React from 'react'\nimport { Button, useWalletModal } from 'cashcow-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","/* eslint-disable */\nimport React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","/* eslint-disable */\nimport React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from 'cashcow-uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from 'cashcow-uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from 'cashcow-uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/images/question.png\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n          external\n          fullWidth\n          mb=\"16px\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"syrup\">\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>??? MILK</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","/* eslint-disable */\nimport React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","/* eslint-disable */\nimport React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from 'cashcow-uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 0,\n}\n\nexport default Balance\n","/* eslint-disable */\nimport BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'cashcow-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","/* eslint-disable */\nimport BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'cashcow-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  decimals: number\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '', decimals = 18 }) => {\n  // CryptoWhatElse added the decimals param so we can also work with the 9 decimals for COW\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals)\n  }, [max, decimals])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","/* eslint-disable */\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from 'cashcow-uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","/* eslint-disable */\nimport React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","/* eslint-disable */\nimport React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\nimport { LinkExternal } from 'cashcow-uikit'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <LinkExternal href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </LinkExternal>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from 'cashcow-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.MILK\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} decimals={tokenDecimals} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'cashcow-uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from 'cashcow-uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n     \n        <div>\n          <Heading as=\"h1\" size=\"lg\" color=\"text\" mb=\"25px\" style={{ textAlign: 'center' }}>\n            {TranslateString(282, 'Stake MILK to earn tokens')}\n          </Heading>\n          <Heading as=\"h4\" color=\"text\" mb=\"50px\" style={{ textAlign: 'center' }}>\n            {TranslateString(580,'You can unstake at any time. Rewards are calculated per block.' )}\n            \n         \n\t\t  </Heading>\n        </div>\n        {/* <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} /> */}\n      \n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n\t\t\t<Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}